# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Run Automated Tests and Public to JIRA

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      testExecKey:
        description: 'Test Exec ID from Xray'
        default: ''
        required: true
        type: string
      projectKey:
        description: 'Project ID from Xray'
        default: ''
        required: true
        type: string
        
      strategy:
      matrix:
        node-version: [15.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

      steps:
      - uses: actions/checkout@v2
      - name: Output Inputs
        run: echo "${{ toJSON(github.event.inputs) }}"
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - run: |
          npm install
          npm i -D @playwright/test
          npx playwright install 
      - name: Run tests
        continue-on-error: true
        run: |  
          PLAYWRIGHT_JUNIT_OUTPUT_NAME=xray-report.xml npx playwright test
      - name: Output results file
        run: |
          cat xray-report.xml
      - name: "Import results to Xray"
        uses: mikepenz/xray-action@v2.3.0
        with:
           username: ${{ secrets.JIRA_USERNAME }}
           password: ${{ secrets.JIRA_PASSWORD }}
           xrayCloud: "false"
           xrayBaseUrl: ${{ secrets.JIRA_BASEURL }}
           testFormat: "junit"
           testPaths: "**/xray-report.xml"
           testExecKey: "${{ inputs.testExecKey }}"
           projectKey: "${{ inputs.projectKey }}"
           testEnvironments: "NODE_${{ matrix.node-version }}"
jobs:
  build:
    name: Build Project
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        
    - name: Build with Maven
      run: mvn -B package --file pom.xml  
      continue-on-error: true

    - name: Get Report
      run: | 
        latest_report=$(ls -t report/*.html | head -n 1)
        cat $latest_report > AutomationReport.html

    - name: Publish Automation Report
      uses: actions/upload-artifact@v3.1.2
      with:
        name: Automation Report HTML
        path: AutomationReport.html
        
